[
    {
        "attributes": {
            "description": "",
            "kibanaSavedObjectMeta": {
                "searchSourceJSON": "{\"query\":{\"query\":\"\",\"language\":\"lucene\"},\"filter\":[]}"
            },
            "title": "Cyndi - description",
            "uiStateJSON": "{}",
            "version": 1,
            "visState": "{\"title\":\"Cyndi - description\",\"type\":\"markdown\",\"params\":{\"fontSize\":12,\"openLinksInNewTab\":false,\"markdown\":\"# Cyndi perf test\\n\\nTest flows like this:\\n\\n* Create connector with TOPIC=test.created\\n* Generate N UUIDs into my DB\\n* Test created messages:\\n    * Pause connector\\n    * Produce N \u201ccreated\u201d messages using UUIDs from above\\n    * Count original number of rows in the target DB\\n    * Record current timestamp as parameters.created.connector_resumed_at\\n    * Resume connector\\n    * Wait till we have original + N rows in the target DB\\n    * Record current timestamp as parameters.created.topic_materialized_at\\n* Test updated messages:\\n    * Pause connector\\n    * Produce N \u201cupdated\u201d messages using UUIDs from above and test run ID as one of the tags\\n    * Record current timestamp as parameters.updated.connector_resumed_at\\n    * Resume connector\\n    * Wait till we have N rows in the target DB which have test run ID as one of the tags\\n    * Record current timestamp as parameters.updated.topic_materialized_at\\n* Test deleted messages:\\n    * Pause connector\\n    * Produce N \u201cdeleted\u201d messages using UUIDs from above\\n    * Record current timestamp as parameters.deleted.connector_resumed_at\\n    * Resume connector\\n    * Wait till we have original number of rows in the target DB (number from step 3.c)\\n    * Record current timestamp as parameters.deleted.topic_materialized_at\\n\\nIn the table that describes individual test runs, you can see some connector parameters.\\n\\nGraphs below shows messages processing RPS for 3 test scenarios (\\\"created\\\", \\\"updated\\\" and \\\"deleted\\\"). Other graphs shows connection pods average CPU and memory consumption during the test run as measured by Prometheus.\"},\"aggs\":[]}"
        },
        "id": "d948d4e0-cd78-11ea-83da-d76f25b0f35c",
        "migrationVersion": {
            "visualization": "7.10.0"
        },
        "references": [],
        "type": "visualization",
        "updated_at": "2021-06-22T20:43:14.934Z",
        "version": "WzU3MTA1LDE0XQ=="
    }
]